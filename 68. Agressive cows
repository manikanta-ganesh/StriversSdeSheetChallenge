bool helper(vector<int> &stalls, int k, int m){
    
    int c = 1;
    
    int d = m;
    int i=1;
    while(i< stalls.size()){
        if(stalls[i]-stalls[i-1]>=d){
            c++;
            if(c==k) return true;
            d = m;
        }else{
            d-=(stalls[i]-stalls[i-1]);
        }
        i++;
    }
    
    return false;
    
}

int aggressiveCows(vector<int> &stalls, int k)
{
    //    Write your code here.
    int n = stalls.size();
    sort(stalls.begin(),stalls.end());
    int l = 1;
    int r = -1;
    for(int i=0;i<n;i++){
        r = max(r,stalls[i]);
    }
    
    int ans = 1;
    while(l<=r){
        int m = (l+r)/2;
        if(helper(stalls,k,m)){
            ans = m;
            l = m+1;
        }else{
            r = m-1;
        }
    }
    
    return ans;
    
    
}
