/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;
    
    Node(int _val) {
        val = _val;
        next = NULL;
        random = NULL;
    }
};
*/

class Solution {
public:
    Node* copyRandomList(Node* head) {
        
        if(!head) return NULL;
        
        Node* temp = head;
        
        while(temp!=NULL){
            Node* nxt = temp->next;
            Node* copy = new Node(temp->val);
            temp->next = copy;
            copy->next = nxt;
            temp = nxt;
        }
        
        temp = head;
        
        while(temp!=NULL && temp->next!=NULL){
            if(temp->random) temp->next->random = temp->random->next;
            temp = temp->next->next;
        }
        
        temp = head;
        Node* ans = head->next;
        Node* po = head->next;
        
        while(temp!=NULL && po!=NULL){
            Node* nxt = po->next;
            temp->next = nxt;
            if(nxt) po->next = nxt->next;
            po = po->next;
            temp= temp->next;
        }
        
        return ans;
        
    }
};
